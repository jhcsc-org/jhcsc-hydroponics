/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_HYDROPONICS_PB_H_INCLUDED
#define PB_HYDROPONICS_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Command_CommandType {
    Command_CommandType_TOGGLE_RELAY = 0,
    Command_CommandType_CALIBRATE_PH = 1
} Command_CommandType;

/* Struct definitions */
typedef struct _SensorData {
    float temperature;
    float humidity;
    float light_level;
    pb_size_t ph_levels_count;
    float ph_levels[5];
    pb_size_t relay_states_count;
    bool relay_states[5];
} SensorData;

typedef struct _Command {
    Command_CommandType type;
    uint32_t relay_index; /* Used with TOGGLE_RELAY */
    uint32_t ph_sensor_index; /* Used with CALIBRATE_PH */
    float ph_calibration_value; /* Used with CALIBRATE_PH */
} Command;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _Command_CommandType_MIN Command_CommandType_TOGGLE_RELAY
#define _Command_CommandType_MAX Command_CommandType_CALIBRATE_PH
#define _Command_CommandType_ARRAYSIZE ((Command_CommandType)(Command_CommandType_CALIBRATE_PH+1))


#define Command_type_ENUMTYPE Command_CommandType


/* Initializer values for message structs */
#define SensorData_init_default                  {0, 0, 0, 0, {0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0}}
#define Command_init_default                     {_Command_CommandType_MIN, 0, 0, 0}
#define SensorData_init_zero                     {0, 0, 0, 0, {0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0}}
#define Command_init_zero                        {_Command_CommandType_MIN, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorData_temperature_tag               1
#define SensorData_humidity_tag                  2
#define SensorData_light_level_tag               3
#define SensorData_ph_levels_tag                 4
#define SensorData_relay_states_tag              5
#define Command_type_tag                         1
#define Command_relay_index_tag                  2
#define Command_ph_sensor_index_tag              3
#define Command_ph_calibration_value_tag         4

/* Struct field encoding specification for nanopb */
#define SensorData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       1) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    light_level,       3) \
X(a, STATIC,   REPEATED, FLOAT,    ph_levels,         4) \
X(a, STATIC,   REPEATED, BOOL,     relay_states,      5)
#define SensorData_CALLBACK NULL
#define SensorData_DEFAULT NULL

#define Command_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT32,   relay_index,       2) \
X(a, STATIC,   SINGULAR, UINT32,   ph_sensor_index,   3) \
X(a, STATIC,   SINGULAR, FLOAT,    ph_calibration_value,   4)
#define Command_CALLBACK NULL
#define Command_DEFAULT NULL

extern const pb_msgdesc_t SensorData_msg;
extern const pb_msgdesc_t Command_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorData_fields &SensorData_msg
#define Command_fields &Command_msg

/* Maximum encoded size of messages (where known) */
#define Command_size                             19
#define HYDROPONICS_PB_H_MAX_SIZE                SensorData_size
#define SensorData_size                          50

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
